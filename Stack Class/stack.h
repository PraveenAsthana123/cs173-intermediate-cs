// stack.h// ***** ADT Specification *****//   // Operations:// //   int size()//   Function:      Accessor for size of stack.//   Precondition:  Stack has been initialized.//   Postcondition: Returns size of the stack.//   //   void Push(ItemType item)//   Function:      Adds item to the top of the stack.//   Precondition:  Stack has been initialized.//   Postcondition: item is at the top of the stack.//                  //   ItemType Pop()//   Function:      Removes and returns the item from the top of the stack.//   Precondition:  Stack has been initialized.//   Postcondition: Top element has been removed from the stack and returned.//                  //   ItemType Top()//   Function:      Returns the item from the top of the stack.//   Precondition:  Stack has been initialized.//   Postcondition: a copy of the top element has been returned.#ifndef _STACK_H_#define _STACK_H_typedef char ItemType;          // Just make ItemType a simple charclass Stack{  public:    // basic operations     int Size() const;       void Push(ItemType item);        ItemType Pop();        ItemType Top() const;        // constructor    Stack();        // copy constructor    Stack(const Stack &source);        // assignment operator    void operator=(const Stack &source);         // destructor    ~Stack();  private:     int size;    int capacity;    ItemType* items;};#endif